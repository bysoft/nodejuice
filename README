===============================================================================
NODEJUICE JavaScript V8 Seeker Server and WSGI
===============================================================================

For docs go to: http://nodejuice.com
Watch a video:  http://www.vimeo.com/8459839

SEVERS
======
wsgi     - (Web Server Gateway Interface) application and static content server.
sidekick - used to keep connection with PHP, Ruby, Perl and Python on Apache.
seeker   - used in dev server mode to auto refresh all attached clients. 
          seeker server can be used with other webservers through sidekick or.
          check out ./demos/seeker to see an example.

USAGE:
================================================
./nodejuice /path/to/app [wsgi] [seeker] [sidekick]

wsgi   - servers dynamic and static content. (Web Server)
seeker - pushes updates to your web browser.
sidekick  - use with apache and other web servers.
 

NODEJUICE WSGI + SEEKER MODE
============================
Launch seeker and wsgi servers making a static server.
./nodejuice /home/stephen/application

APACHE MODE
===========
Launch sidekick and seeker server only.
Use this for APACHE (apache) or other web servers.
./nodejuice /home/stephen/application sidekick

PRODUCTION MODE
===============
Launch only wsgi server only. 
./nodejuice /home/stephen/application wsgi

STATIC SERVER MODE
==================
Launch seeker server only.
./nodejuice /home/stephen/application seeker

DUMBASS MODE
============
Launch ALL Servers (This is pointless and harmless).
./nodejuice /home/stephen/application sidekick wsgi seeker


DIRECTORIES
===========
library   - vendor code and other chuncks of functionality.
servers   - node servers including seeker and wsgi.
demos     - example configurations and folders to show how nodejuice works.
symlinks  - pointers to other needed applications.
provision - error templates (404, 500)
website   - nodeJuice website



==============
demo rad() app
==============
// app-file.js

// http://localhost/rad-test
rad ( /^\/rad-test$/, 'hello world rad() test!' )

// This is the fallback catch all.
rad ( /.*/, 'hello world: last resort' )


================
demo journey app
================
// app-file.js

// This file is matched by the RegEx in nodejuice.js config
var app = exports;
app.journey = function( request, response ) {
    response.impress( '/templates/index.htm', {
        right_now : new Date
    } )
};



===============================================================================
BENCHMARK -> DEV (with seeker server)
===============================================================================
Server Hostname:        127.0.0.1
Server Port:            80

Document Path:          /
Document Length:        5332 bytes

Concurrency Level:      100
Time taken for tests:   4.008 seconds
Complete requests:      10000
Failed requests:        0
Write errors:           0
Total transferred:      54920000 bytes
HTML transferred:       53320000 bytes
Requests per second:    2495.08 [#/sec] (mean)   <-----------------------------
Time per request:       40.079 [ms] (mean)
Time per request:       0.401 [ms] (mean, across all concurrent requests)
Transfer rate:          13381.83 [Kbytes/sec] received


===============================================================================
BENCHMARK -> PRODUCTION
===============================================================================
Server Hostname:        127.0.0.1
Server Port:            80

Document Path:          /
Document Length:        5287 bytes

Concurrency Level:      100
Time taken for tests:   3.223 seconds
Complete requests:      10000
Failed requests:        0
Write errors:           0
Total transferred:      53720000 bytes
HTML transferred:       52870000 bytes
Requests per second:    3102.85 [#/sec] (mean)   <-----------------------------
Time per request:       32.228 [ms] (mean)
Time per request:       0.322 [ms] (mean, across all concurrent requests)
Transfer rate:          16277.86 [Kbytes/sec] received

